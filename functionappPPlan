resource functionApp 'Microsoft.Web/sites' = {
  name: 'myFunctionApp'
  location: resourceGroup().location
  kind: 'functionapp'
  properties: {
    siteConfig: {
      appSettings: [
        {
          name: 'APPINSIGHTS_INSTRUMENTATIONKEY'
          value: '[reference(resourceId('Microsoft.Insights/components', 'myAppInsights'), '2015-05-01').InstrumentationKey]'
        },
        {
          name: 'AzureWebJobsStorage'
          value: '[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', storageAccountName, environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', storageAccountName), '2022-05-01').keys[0].value)]'
        },
        {
          name: 'WEBSITE_CONTENTAZUREFILECONNECTIONSTRING'
          value: '[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', storageAccountName, environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', storageAccountName), '2022-05-01').keys[0].value)]'
        },
        {
          name: 'WEBSITE_CONTENTSHARE'
          value: toLower(functionAppName)
        },
        {
          name: 'FUNCTIONS_EXTENSION_VERSION'
          value: '~4'
        },
        {
          name: 'FUNCTIONS_WORKER_RUNTIME'
          value: functionWorkerRuntime
        },
        {
          name: 'WEBSITE_NODE_DEFAULT_VERSION'
          value: '~14'
        },
        {
          name: 'WEBSITE_RUN_FROM_PACKAGE'
          value: '1'
        }
      ]
    }
  }
}

resource storageAccount 'Microsoft.Storage/storageAccounts' = {
  name: storageAccountName
  location: resourceGroup().location
  sku: {
    name: storageAccountType
  }
  kind: 'Storage'
}

resource hostingPlan 'Microsoft.Web/serverfarms' = {
  name: hostingPlanName
  location: resourceGroup().location
  sku: {
    tier: 'ElasticPremium'
    name: functionAppPlanSku
    family: 'EP'
  }
  properties: {
    maximumElasticWorkerCount: 20
    reserved: isReserved
  }
}

resource applicationInsights 'Microsoft.Insights/components' = {
  name: applicationInsightsName
  location: resourceGroup().location
  properties: {
    Application_Type: 'web'
  }
}

resource zipDeploymentExtension 'Microsoft.Web/sites/extensions' = {
  name: format('{0}/{1}', functionAppName, 'zipdeploy')
  properties: {
    packageUri: packageUri
  }
}
